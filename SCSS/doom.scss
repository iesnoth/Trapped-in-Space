/* css for the doom screen */
@use "sass:math";
@import "style";
@import "border";

//mixins
@mixin component-size {
    position: fixed;
    width: 1000px;
    height: auto
}

html {
    background-color: $background-color;
}

#container {
    position: relative;
    width: 1000px;
    height: 700px;
    margin: 50px;
}

#red-console,
#sky {
    @include component-size();
}

#you-lose,
#bg {
    width: 100%;
    pointer-events: none;
}

/* ANIMATION */
#red-console {
    z-index: 2;
    animation: shake 0.8s;
    animation-iteration-count: infinite;
}



//I'm pretty sure this logic is sound, but couldn't get sass to recognize the
//math functions, though research showed it should be possible.
// @function get-random-num($max) {
//     @return math.floor(math.random() * $max)
// };

// //arrays for shake animation
// $percents: 0%, 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%, 100%;
// $percents-2: 10%, 30%, 50%, 70%, 90%;


@keyframes shake {
    // @each $percent in $percents {
    //     #{$percent} {
    //         transform: translate(get-random-num(4)px, get-random-num(2)px) rotate(get-random-num(3)deg);
    //     }
    // };

    0% {
        transform: translate(1px, 1px) rotate(0deg);
    }

    10% {
        transform: translate(-1px, -2px) rotate(-2deg);
    }

    20% {
        transform: translate(-3px, 0px) rotate(1deg);
    }

    30% {
        transform: translate(3px, 2px) rotate(0deg);
    }

    40% {
        transform: translate(1px, -1px) rotate(1deg);
    }

    50% {
        transform: translate(-1px, 2px) rotate(-1deg);
    }

    60% {
        transform: translate(-7px, 20px) rotate(0deg);
    }

    70% {
        transform: translate(3px, 1px) rotate(-2deg);
    }

    80% {
        transform: translate(-1px, -1px) rotate(1deg);
    }

    90% {
        transform: translate(1px, 2px) rotate(0deg);
    }

    100% {
        transform: translate(1px, -2px) rotate(-1deg);
    }
}

#border-div {
    @include border();

    // bottom: 15%;
    // left: 10%
    #border {
        width: 100%;
        pointer-events: none;
    }
}



#info,
#restart {
    position: relative;
    z-index: 6;
}